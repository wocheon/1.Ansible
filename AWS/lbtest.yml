---
- name: aws ec2
  hosts: localhost
  become: yes
  gather_facts: no
  tasks:

  - name : vpc
    ec2_vpc_net:
      name: vpc
      cidr_block: 172.16.0.0/16
      tags:
        name: ansiblevpc
      state: present
    register: vpc_create_result

  - name: igw
    ec2_vpc_igw:
      vpc_id: "{{ vpc_create_result.vpc.id }}"
      state: present
      tags:
        name: ansibleigw

  - name: subnet1
    ec2_vpc_subnet:
      cidr: 172.16.1.0/24
      vpc_id: "{{ vpc_create_result.vpc.id }}"
      az: ap-northeast-2c
      map_public: yes
      state: present
      resource_tags:
        name: subnet1
    register: subnet_create_result

  - name: subnet2
    ec2_vpc_subnet:
      cidr: 172.16.2.0/24
      vpc_id: "{{ vpc_create_result.vpc.id }}"
      az: ap-northeast-2c
      map_public: yes
      state: present
      resource_tags:
        name: subnet2
    register: subnet2_create_result

#  - name: routing table
 #   ec2_vpc_route_table:
  #    vpc_id: "{{ vpc_create_result.vpc.id }}"
   #   state: present
    #  subnets: "{{ subnet_create_result.subnet.id }}"
  - name: sg1
    ec2_group:
      name: subnet1_sg
      vpc_id: "{{ vpc_create_result.vpc.id }}"
      state: present
      description: permit ssh, web
      tags:
        name: subnet1_sg
      rules:
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
        - 80
        cidr_ip: 0.0.0.0/0

  - name: instance1
    ec2:
      key_name: aws-con2
      instance_tags:
        name: instance1
      image: ami-086a3601cd7a83590 
      group: subnet1_sg
      wait: yes
      count: 1
      vpc_subnet_id: "{{ subnet_create_result.subnet.id }}"
      assign_public_ip: yes
      instance_tags:
        name: instance1
    register: ec2

  - name: instance2
    ec2:
      key_name: aws-con2
      instance_tags:
        name: instance2
      image: ami-086a3601cd7a83590 
      group: subnet1_sg
      wait: yes
      count: 1
      vpc_subnet_id: "{{ subnet_create_result.subnet.id }}"
      assign_public_ip: yes
      instance_tags:
        name: instance2
    register: ec22

  - debug: 
      var: ec2

  - name: elb test
    ec2_elb_lb:
      name: test
      state: present
      region: ap-northeast-2
      zones:
        - ap-northeast-2c
      subnets: 
        - "{{ subnet_create_result.subnet.id }}"
      instance_ids: "{{ ec2.instance_ids }}" 
      instance_ids: "{{ ec22.instance_ids }}" 
      listeners:
        - protocol: http
          load_balancer_port: 80
          instance_port: 80
      tags:
        name: elb_test
